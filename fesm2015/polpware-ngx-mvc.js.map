{"version":3,"file":"polpware-ngx-mvc.js","sources":["ng://@polpware/ngx-mvc/lib/mvc/platform-oblivious-list-page.ts","ng://@polpware/ngx-mvc/lib/mvc/adaptors/angular-to-controller-adaptor.ts","ng://@polpware/ngx-mvc/lib/mvc/full-feature-list-page.ts","ng://@polpware/ngx-mvc/lib/mvc/ngstore-backed-list-page.ts","ng://@polpware/ngx-mvc/lib/mvc/backbone-backed-list-page.ts","ng://@polpware/ngx-mvc/lib/services/backend-settings.service.ts","ng://@polpware/ngx-mvc/public_api.ts","ng://@polpware/ngx-mvc/polpware-ngx-mvc.ts"],"sourcesContent":["/**\n * @fileOverview\n * This abstract class defines a base class for implementing\n * a page with such features as refreshing, loading more, and\n * listening to changes from a global database and inserting\n * or deleting elements accordingly.\n *\n * This class does not depend on any features that a specific\n * platform may provide, such as ionViewDidload and ...unload.\n *\n * @name PlatformAgosticFullFeatureListPage.ts\n * @author Xiaolong Tang <xxlongtang@gmail.com>\n * @license Copyright @me\n */\n\n// By default, we do not listen to any change ..\n\nimport * as hInterface from '@polpware/fe-dependencies';\n\nimport { IViewInstance } from '@polpware/fe-mvc';\n\nimport { IListMediatorPublic } from '@polpware/fe-mvc';\nimport { IMediatorCompatiblePage } from './mediator-compatible-page.interface';\n\nimport {\n    ILoadingIndicator,\n    IRefreshingIndicator,\n    ILoadingMoreIndicator\n} from '../interfaces/indicators.interface';\n\nconst _ = hInterface.underscore;\n\nexport abstract class PlatformObliviousListPage\n    implements IMediatorCompatiblePage,\n    ILoadingIndicator,\n    IRefreshingIndicator,\n    ILoadingMoreIndicator {\n\n    public moreDataCanBeLoaded: boolean;\n    public callbacks: {\n        onRefresh: any,\n        onInfinite: any\n    };\n\n    protected listMediator: IListMediatorPublic;\n\n    constructor() {\n        this.moreDataCanBeLoaded = false;\n        this.callbacks = {\n            onRefresh: null,\n            onInfinite: null\n        };\n    }\n\n    protected abstract buildViewInstance(): IViewInstance;\n\n    protected abstract buildMediator(...args: any[]): PromiseLike<void>;\n\n    protected turnOnMediator(fromCache: boolean, ...rest: any[]) {\n        const viewInstance = this.buildViewInstance();\n        this.listMediator.startService(viewInstance, fromCache);\n    }\n\n    protected turnOffMediator() {\n        this.listMediator.stopService();\n    }\n\n    public abstract showLoadingIndicator(...args: Array<any>): void;\n    public abstract hideLoadingIndicator(...args: Array<any>): void;\n    public abstract setLoadingIndicatorDelay(seconds: number): void;\n\n    public abstract showMoreLoading(...args: Array<any>): void;\n    public abstract hideMoreLoading(...args: Array<any>): void;\n\n    public abstract showRefreshingIndicator(...args: Array<any>): void;\n    public abstract hideRefreshingIndicator(...args: Array<any>): void;\n\n    // Will be invoked from the adaptor and therefore\n    // must be public\n    public abstract onNewItemsReady(items: Array<any>): Array<any>;\n\n    public abstract onItemsReady(): void;\n}\n\n","import * as dependencies from '@polpware/fe-dependencies';\nimport { pushArray } from '@polpware/fe-utilities';\n\nimport { IViewInstance } from '@polpware/fe-mvc';\n\nconst _ = dependencies.underscore;\nconst noop = _.noop;\n\nexport function adaptAngularToController(context): IViewInstance {\n    return {\n        $data: {\n            init: function() {\n                context.$scope.moreDataCanBeLoaded = false;\n            },\n            setRefreshCallback: function(callback) {\n                context.$scope.callbacks.onRefresh = callback;\n            },\n            setInfiniteCallback: function(callback) {\n                context.$scope.callbacks.onInfinite = callback;\n            },\n            clean: function() {\n                context.$scope.onItemsReady();\n            },\n            asyncPush: function(items) {\n                context.$scope.onNewItemsReady(items);\n                context.$scope.onItemsReady();\n            },\n            syncPush: function(items) {\n                context.$scope.onNewItemsReady(items);\n                context.$scope.onItemsReady();\n            },\n\n            asyncPop: function(items) {\n                context.$scope.onItemsReady();\n            },\n            syncPop: function(items) {\n                context.$scope.onItemsReady();\n            },\n            asyncPrepend: function(items) {\n                context.$scope.onNewItemsReady(items);\n                context.$scope.onItemsReady();\n            },\n            syncPrepend: function(items) {\n                context.$scope.onNewItemsReady(items);\n                context.$scope.onItemsReady();\n            },\n            asyncRefresh: noop,\n            syncRefresh: noop,\n            hasMoreData: function(flag) {\n                context.$scope.moreDataCanBeLoaded = flag;\n            },\n            getItems: function() {\n            },\n            setupSearch: function(criteria, callback) {\n                context.$scope.searchCriteria = criteria;\n                context.$scope.doSearch = callback;\n            },\n            updateSearchCriteria: function(criteria) {\n                context.$scope.searchCriteria = criteria;\n            },\n            getAncestor: function() {\n                return context.$scope.ancestor;\n            }\n        },\n        $loader: {\n            show: function() {\n                context.$scope.showLoadingIndicator();\n            },\n            hide: function() {\n                context.$scope.hideLoadingIndicator();\n            }\n        },\n        $refresher: {\n            show: function() {\n                context.$scope.showRefreshingIndicator();\n            },\n            hide: function() {\n                context.$scope.hideRefreshingIndicator();\n            }\n        },\n        $moreLoader: {\n            show: function() {\n                context.$scope.showMoreLoading();\n            },\n            hide: function() {\n                context.$scope.hideMoreLoading();\n            }\n        },\n        $router: {\n            go: function(url, data) {\n                context.$state.go(url, data);\n            }\n        },\n        $render: {\n            ready: function(callback) {\n                context.$scope.callbacks.onViewDidLoad = callback;\n            },\n            destroy: function(callback) {\n                context.$scope.callbacks.onViewWillUnload = callback;\n            },\n            asyncDigest: noop\n        },\n        $navBar: {\n            /**\n             * Get current state\n             * @returns {}\n             */\n            getState: noop,\n            /**\n             * Set state\n             * @param {Boolean} s\n             */\n            setState: noop\n        },\n        $modal: {\n            setData: function(key, data) {\n                context.$scope[key] = data;\n            },\n            getData: function(key) {\n                return context.$scope[key];\n            },\n            build: noop\n        },\n        $popover: {\n            setData: function(key, data) {\n                context.$scope[key] = data;\n            },\n            getData: function(key) {\n                return context.$scope[key];\n            },\n            build: noop,\n            onHidden: noop\n        },\n        $popup: {\n            setData: function(data) {\n                context.$scope.popupInput = _.extend({\n                    confirmed: false\n                }, data);\n            },\n            getData: function() {\n                return context.$scope.popupInput;\n            },\n            build: noop,\n            confirm: noop,\n            prompt: noop,\n            alert: noop\n        },\n        $progressBar: {\n            create: noop,\n            reset: function() {\n                context.$scope.progressBar = 0;\n            },\n            createInfinite: noop,\n            onProgress: function(percentage) {\n                context.$scope.progressBar = percentage;\n            },\n            destroy: noop,\n            destroyInfinite: noop,\n            showAbort: noop\n        },\n        $alertify: context.alertify,\n        $history: {\n            goBack: function() {\n                context.$ionicHistory.goBack();\n            }\n        }\n    };\n}\n\n","import { IViewInstance } from '@polpware/fe-mvc';\nimport { IListMediatorPublic } from '@polpware/fe-mvc';\n// base\nimport {\n    PlatformObliviousListPage\n} from './platform-oblivious-list-page';\n\nimport {\n    adaptAngularToController\n} from './adaptors/angular-to-controller-adaptor';\n\nexport interface IPageLifeCycle {\n    onDocumentReady(...args: Array<any>): void;\n    onDocumentDestroy(...args: Array<any>): void;\n}\n\nexport abstract class FullFeatureListPage\n    extends PlatformObliviousListPage implements IPageLifeCycle {\n\n    onDocumentReady(...args: Array<any>) {\n        // Cache will be provided in its derived class\n        this.ensureDataProvider(...args);\n    }\n\n    onDocumentDestroy(...args: Array<any>) {\n\n        // Cache will be provided in its derived class\n\n        this.turnOffMediator();\n        this.afterMediatorOff();\n    }\n\n    protected abstract ensureDataProvider(...args: Array<any>): void;\n    protected abstract afterMediatorOn(): void;\n    protected abstract afterMediatorOff(): void;\n\n    protected abstract readMediatorFromCache(key: string): IListMediatorPublic;\n    protected abstract writeMediatorIntoCache(key: string, value: IListMediatorPublic): void;\n    protected abstract addOnCacheExpireHandler(key: string): void;\n    protected abstract removeOnCacheExpireHandler(key: string): void;\n\n    // May be not needed. \n    protected onDataProviderReady(dataProvider: any): void {\n        this.buildMediator(dataProvider).then(() => {\n            this.turnOnMediator(false);\n            this.afterMediatorOn();\n        });\n    }\n\n    // Override\n    protected buildViewInstance(): IViewInstance {\n        return adaptAngularToController({\n            $scope: this\n        });\n    }\n\n    public doRefresh() {\n        // Trigger refresh\n        if (this.callbacks.onRefresh) {\n            this.callbacks.onRefresh();\n        }\n    }\n\n    public doInfinite() {\n        // Trigger loading more\n        if (this.callbacks.onInfinite) {\n            this.callbacks.onInfinite();\n        }\n    }\n\n    public showLoadingIndicator(...args: any[]) { }\n\n    public hideLoadingIndicator(...args: any[]) { }\n\n    public setLoadingIndicatorDelay(seconds: number) { }\n\n    public showMoreLoading(...args: any[]) { }\n\n    public hideMoreLoading(...args: any[]) { }\n\n    public showRefreshingIndicator(...args: any[]) { }\n\n    public hideRefreshingIndicator(...args: any[]) { }\n\n}\n\n","import { Subscription } from 'rxjs';\n\nimport {\n    IListMediatorCtorOptions\n} from '@polpware/fe-mvc';\n\nimport {\n    NgStoreListMediator,\n    INgStoreListMediatorPublic\n} from '@polpware/fe-mvc';\n\nimport {\n    ICollectionItem\n} from '@polpware/fe-data';\n\nimport {\n    CollectionStore\n} from '@polpware/fe-data';\n\n\nimport {\n    ISlidingExpireCache\n} from '@polpware/fe-data';\n\n// base\nimport { FullFeatureListPage } from './full-feature-list-page';\n\n// Note that in the class, please avoid to depend on onNewItemsReady,\n// as it is NOT in the update flow.\n\nexport abstract class NgStoreBackedListPage<T extends ICollectionItem>\n    extends FullFeatureListPage {\n\n    protected defaultLivePeriod = 60 * 5;\n\n    // More configuration for constructing dataprovider\n    protected mediatorCtorOptions: IListMediatorCtorOptions;\n\n    protected mediatorCache: ISlidingExpireCache<INgStoreListMediatorPublic>;\n    private _onCacheExpireCallback: any;\n\n    private _storeSubscription: Subscription;\n    public items: T[];\n\n    constructor() {\n        super();\n\n        this.mediatorCtorOptions = {\n            useModel: true,\n            enableInfinite: true,\n            enableRefresh: true\n        };\n        this.items = [];\n        this._onCacheExpireCallback = null;\n    }\n\n    // Override\n    protected turnOnMediator(fromCache: boolean) {\n        super.turnOnMediator(fromCache);\n\n        const store = this.asNgStoreListMeidator.getNgStore();\n        this._storeSubscription = store.getState().subscribe((data) => {\n            const w = data.items as T[];\n            this.items = w;\n            // Note that we must call onItemsReady ... \n            this.onItemsReady();\n        });\n    }\n\n    // Override\n    protected turnOffMediator() {\n        this._storeSubscription.unsubscribe();\n        super.turnOffMediator();\n    }\n\n    // Override\n    protected buildMediator(dataProvider: any): PromiseLike<void> {\n\n        const ctorOptions: IListMediatorCtorOptions = {\n            ...this.mediatorCtorOptions,\n            dataProvider: dataProvider\n        };\n\n        const s = new CollectionStore<T>();\n\n        const m: INgStoreListMediatorPublic = new NgStoreListMediator(ctorOptions);\n        m.setNgStore(s);\n\n        this.listMediator = m;\n        this.listMediator.setUp();\n\n        return Promise.resolve();\n    }\n\n    protected get asNgStoreListMeidator(): INgStoreListMediatorPublic {\n        const m = this.listMediator;\n        return m as INgStoreListMediatorPublic;\n    }\n\n    protected readMediatorFromCache(key: string): INgStoreListMediatorPublic {\n        return this.mediatorCache.get(key, this.defaultLivePeriod);\n    }\n\n    protected writeMediatorIntoCache(key: string, value: INgStoreListMediatorPublic): void {\n        this.mediatorCache.set(key, value, this.defaultLivePeriod, (evt) => {\n            value.tearDown();\n            return evt;\n        });\n    }\n\n    protected addOnCacheExpireHandler(key: string): void {\n        this._onCacheExpireCallback = function(evt) {\n            evt.preventDefault();\n            return evt;\n        };\n\n        this.mediatorCache.addOnExpireHandler(key, this._onCacheExpireCallback);\n    }\n\n    protected removeOnCacheExpireHandler(key: string): void {\n        this.mediatorCache.rmOnExpireHandler(key, this._onCacheExpireCallback);\n        this._onCacheExpireCallback = null;\n    }\n\n    // Default implementation.\n    // Override\n    // Note that in the derived class we do NOT depend on it.\n    onNewItemsReady(items: T[]) {\n        return items;\n    }\n\n}\n\n","import { Subscription } from 'rxjs';\n\nimport { IViewInstance } from '@polpware/fe-mvc';\n\nimport { pushArray } from '@polpware/fe-utilities';\n\nimport {\n    WritableListMediator,\n    IWritableListMediatorCtorOptions,\n    IWritableListMediatorPublic\n} from '@polpware/fe-mvc';\n\nimport {\n    RxjsPoweredWritableListMediator\n} from '@polpware/fe-mvc';\n\nimport {\n    ICollectionItem\n} from '@polpware/fe-data';\n\nimport {\n    ISlidingExpireCache\n} from '@polpware/fe-data';\n\n// base\nimport { FullFeatureListPage } from './full-feature-list-page';\n\n// Note that we use ICollectionItem rather than IModelLike,\n// because we assume the least requirement for the input type.\n// Precisely, the only requirement is that the collection item has an\n// id field. \n\nexport abstract class BackboneBackedListPage<T extends ICollectionItem>\n    extends FullFeatureListPage {\n\n    protected defaultLivePeriod = 60 * 5;\n\n    protected mediatorCache: ISlidingExpireCache<IWritableListMediatorPublic>;\n    private _onCacheExpireCallback: any;\n\n    public items: T[];\n\n    constructor() {\n        super();\n\n        this.items = [];\n        this._onCacheExpireCallback = null;\n    }\n\n    // We use a functon to compute cacheKey, so that we can\n    // compute the cache key with more inputs. \n    protected abstract getCacheKey(...args: any[]): string;\n\n    protected get asWritableListMediator(): IWritableListMediatorPublic {\n        const m = this.listMediator;\n        return m as IWritableListMediatorPublic;\n    }\n\n    // Default implementation for using backbone\n    protected useMediatorWithOnlyLocalDataProvider(localDataProvider: any, localOptions?: object) {\n\n        const ctorOptions: IWritableListMediatorCtorOptions = {\n            dataProvider: localDataProvider,\n            useModel: true,\n            enableInfinite: true,\n            enableRefresh: true\n        };\n\n        const s = new WritableListMediator(ctorOptions);\n        this.listMediator = s;\n        this.listMediator.setUp();\n    }\n\n    protected useMediatorWithGlobalDataProvider(localDataProvider: any, globalDataProvider: any,\n        localOptions?: object, globalOptions?: object) {\n\n        const mediator = new RxjsPoweredWritableListMediator({\n            globalProvider: globalDataProvider,\n            filterFlags: {\n                added: true,\n                removed: true,\n                updated: false\n            },\n            dataProvider: localDataProvider,\n            useModel: true\n        });\n\n        this.listMediator = mediator;\n        this.listMediator.setUp();\n    }\n\n    // Invoked after the new mediator is constructure \n    protected postUseFreshMediator(...args: any[]) {\n        this.turnOnMediator(false, ...args);\n        this.afterMediatorOn();\n    }\n\n    // Invoked after the cached mediator is used \n    protected postUseCachedMediator(...args: any[]) {\n        this.turnOnMediator(true, ...args);\n        this.afterMediatorOn();\n    }\n\n    // Override to support cache\n    protected ensureDataProvider(...args: any[]) {\n        if (this.mediatorCache) {\n\n            const cacheKey = this.getCacheKey(...args);\n            let inCache = false;\n\n            const mediator = this.readMediatorFromCache(cacheKey);\n\n            if (!mediator) { // Not in cache\n\n                this.buildMediator(...args).then(() => {\n                    // set up in the cache\n                    this.writeMediatorIntoCache(cacheKey, this.asWritableListMediator);\n\n                    // case 1:\n                    this.postUseFreshMediator(true, ...args);\n                });\n\n            } else { // In cache\n\n                inCache = true;\n                this.listMediator = mediator;\n\n                // Case 2:\n                this.postUseCachedMediator(...args);\n            }\n\n        } else {\n\n            this.buildMediator(...args).then(() => {\n\n                // Case 3: \n                this.postUseFreshMediator(false, ...args);\n            });\n        }\n    }\n\n    // Override\n    protected afterMediatorOn() {\n        if (this.mediatorCache) {\n            // In this case, we do not Provide any inputs \n            const cacheKey = this.getCacheKey();\n            this.addOnCacheExpireHandler(cacheKey);\n        }\n    }\n\n    // Override\n    protected afterMediatorOff() {\n        if (this.mediatorCache) {\n            // In this case, we do not Provide any inputs\n            const cacheKey = this.getCacheKey();\n            this.removeOnCacheExpireHandler(cacheKey);\n        }\n    }\n\n\n    // Default implementation\n    public onNewItemsReady(items: Array<any>): Array<any> {\n        pushArray(this.items, items);\n        return items;\n    }\n\n    // Default implementation.\n    onItemsReady() {\n        const viewData = this.asWritableListMediator.viewLevelData();\n        // Get the data from the view level data \n        this.items = viewData.models.slice(0);\n    }\n\n    // Note that it is up to the caller to decide how to use the\n    // cached value; we need to precisely tell where there is a value in the cache\n    // for the corresponding key\n    protected readMediatorFromCache(key: string): IWritableListMediatorPublic {\n        return this.mediatorCache.get(key, this.defaultLivePeriod);\n    }\n\n    protected writeMediatorIntoCache(key: string, mediator: IWritableListMediatorPublic): void {\n        this.mediatorCache.set(key, mediator, this.defaultLivePeriod, (evt) => {\n            mediator.tearDown();\n            return evt;\n        });\n    }\n\n    protected addOnCacheExpireHandler(key: string): void {\n        this._onCacheExpireCallback = function(evt) {\n            evt.preventDefault();\n            return evt;\n        };\n\n        this.mediatorCache.addOnExpireHandler(key, this._onCacheExpireCallback);\n    }\n\n    protected removeOnCacheExpireHandler(key: string): void {\n        this.mediatorCache.rmOnExpireHandler(key, this._onCacheExpireCallback);\n        this._onCacheExpireCallback = null;\n    }\n\n}\n\n","import { InjectionToken } from '@angular/core';\n\nexport class BackendSettings {\n    urlBase: string;\n}\n\nexport const BACKEND_SETTINGS = new InjectionToken<BackendSettings>('Backend Settings');\n","/*\n * Public API Surface of ngx-mvc\n */\n\nexport * from \"./lib/interfaces/indicators.interface\";\nexport * from \"./lib/mvc/ngstore-backed-list-page\";\nexport * from \"./lib/mvc/adaptors/angular-to-controller-adaptor\";\nexport * from \"./lib/mvc/platform-oblivious-list-page\";\nexport * from \"./lib/mvc/backbone-backed-list-page\";\nexport * from \"./lib/mvc/full-feature-list-page\";\nexport * from \"./lib/mvc/mediator-compatible-page.interface\";\nexport * from \"./lib/services/backend-settings.service\";   \n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["hInterface.underscore","_","dependencies.underscore"],"mappings":"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"}